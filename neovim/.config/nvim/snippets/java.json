{
    "Test": {
        "prefix": ["test"],
        "body": [
            "import org.junit.jupiter.api.*;",
            "import org.springframework.beans.factory.annotation.Autowired;",
            "import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;",
            "import org.springframework.boot.test.context.SpringBootTest;",
            "import org.springframework.test.web.servlet.MockMvc;",
            "import org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder;",
            "import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;",
            "import org.springframework.test.web.servlet.result.MockMvcResultMatchers;",
            "",
            "@SpringBootTest",
            "@AutoConfigureMockMvc",
            "public class ${1:ClassNameTest} {\n",
            "  @BeforeEach",
            "  public void before() {",
            "  }",
            "",
            "  @Test",
            "  @DisplayName(\"${2:Given..., When..., Then...}\")",
            "  public void given_when_then() throws Exception {",
            "    ${3:// Code}",
            "  }",
            "}"
        ]
    },
    "Class": {
        "prefix": ["class"],
        "body": [
            "public class ${1:ClassName} {",
            "  ${0:// Code}",
            "}"
        ]
    },
    "Method": {
        "prefix": ["fn"],
        "body": [
            "public ${1:void} ${2:methodName}(${3:/* Parameter */}) {",
            "  ${0:// Code}",
            "}"
        ]
    },
    "Api": {
        "prefix": ["api"],
        "body": [
            "import org.springframework.http.MediaType;",
            "import org.springframework.web.bind.annotation.GetMapping;",
            "import org.springframework.web.bind.annotation.PostMapping;",
            "import org.springframework.web.bind.annotation.RequestMapping;",
            "import org.springframework.web.bind.annotation.RestController;",
            "",
            "@RestController",
            "@RequestMapping(value = \"${2:/api}\", produces = MediaType.APPLICATION_JSON_VALUE)",
            "public class ${1:NameOfApi} {",
            "",
            "  public ${1}() {",
            "  }",
            "",
            "  @GetMapping",
            "  public void get() {",
            "",
            "  }",
            "",
            "  @PostMapping",
            "  public void post() {",
            "",
            "  }",
            "}"
        ]
    }
}
